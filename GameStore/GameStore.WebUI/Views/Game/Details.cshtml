@using GameStore.WebUI.Authentication.Components

@model GameStore.WebUI.ViewModels.Game.GameDetailsViewModel

@{
	ViewBag.Title = @Model.Game.DisplayName;
}

<div class="page-header">
	<h1>
		@Resource.Common_Game: <small>@Model.Game.DisplayName</small>
		
		@if (Model.Game.IsDeleted)
		{
			<span class="text-danger">[@Resource.Game_AllGames_Deleted]</span>
		}
		
		@if (Html.IsUserInRole(UserRole.Guest | UserRole.User) && !Model.Game.IsDeleted)
		{
			<button type="button" class="btn btn-success pull-right" data-toggle="modal" data-target="#basket-confirm">@Resource.Game_AllGames_Buy</button>
		}
	</h1>
</div>

<!-- Game info -->
<div>
	<!-- Description -->
	<div class="row">
		<div class="col-md-3">
			@Html.LabelFor(model => model.Game.Description, new { @class = "control-label text-uppercase" }):
		</div>
		<div class="col-md-9">
			@Html.DisplayFor(model => model.Game.DisplayDescription)
		</div>
	</div>

	<!-- Publisher -->
	<div class="row">
		<div class="col-md-3">
			@Html.LabelFor(model => model.Publisher, new {@class = "control-label text-uppercase"}):
		</div>
		<div class="col-md-9">
			@if (Model.Game.PublisherId.HasValue)
			{
				@Html.ActionLink(Model.Publisher.DisplayCompanyName, "Details", "Publisher", new { company = Model.Publisher.CompanyName }, null)
			}
			else
			{
				@Html.DisplayFor(model => model.Publisher.DisplayCompanyName)
			}
		</div>
	</div>

	<!-- Price -->
	<div class="row">
		<div class="col-md-3">
			@Html.LabelFor(model => model.Game.Price, new {@class = "control-label text-uppercase"}):
		</div>
		<div class="col-md-9">
			@Html.DisplayFor(model => model.Game.Price)
		</div>
	</div>

	<!-- Units in stock -->
	<div class="row">
		<div class="col-md-3">
			@Html.LabelFor(model => model.Game.UnitsInStock, new {@class = "control-label text-uppercase"}):
		</div>
		<div class="col-md-9">
			@Html.DisplayFor(model => model.Game.UnitsInStock)
		</div>
	</div>

	<!-- Discontinued -->
	<div class="row">
		<div class="col-md-3">
			@Html.LabelFor(model => model.Game.Discontinued, new {@class = "control-label text-uppercase"}):
		</div>
		<div class="col-md-9">
			@Html.CheckBoxFor(model => model.Game.Discontinued, new {disabled = "disabled"})
		</div>
	</div>
	
	@if (!Model.Game.IsReadOnly)
	{
		<!-- Date published -->
		<div class="row">
			<div class="col-md-3">
				@Html.LabelFor(model => model.Game.DatePublished, new { @class = "control-label text-uppercase" }):
			</div>
			<div class="col-md-9">
				@Html.DisplayFor(model => model.Game.DatePublished)
			</div>
		</div>
	}

	<!-- Genres -->
	<div class="row">
		<div class="col-md-3">
			<label class="control-label text-uppercase">@Html.DisplayNameFor(m => m.Genres) </label>:
		</div>
		<div class="col-md-9">
			@foreach (GenreViewModel genre in Model.Genres)
			{
				@Html.DisplayFor(m => genre)
			}
		</div>
	</div>

	<!-- Platforms -->
	<div class="row">
		<div class="col-md-3">
			<label class="control-label text-uppercase">@Html.DisplayNameFor(m => m.PlatformTypes) </label>:
		</div>
		<div class="col-md-9">
			@foreach (PlatformTypeViewModel platform in Model.PlatformTypes)
			{
				@Html.DisplayFor(m => platform)
			}
		</div>
	</div>
</div>

@using (Html.BeginForm("Remove", "Game", FormMethod.Post))
{
	@Html.ActionLink(Resource.Common_Comments, "Comments", new { gameKey = Model.Game.Key, controller = "Comment" }, new { @class = "btn btn-link pull-right" })

	if (!Html.IsUserInRole(UserRole.Guest))
	{
		@Html.ActionLink(Resource.Game_AllGames_Download, "Download", new { key = Model.Game.Key, controller = "Game" }, new { target = "blank", @class = "btn btn-link pull-right" })
	}

	if (!Model.Game.IsReadOnly && !Model.Game.IsDeleted)
	{
		if (Html.IsUserInRole(UserRole.Manager))
		{
			<button type="submit" class="btn btn-link pull-right">@Resource.Common_Delete</button>
		}

		if (Html.IsUserInRole(UserRole.Manager) || Html.IsUserSpecificPublisher(Model.Publisher.CompanyName))
		{
			@Html.ActionLink(Resource.Common_Edit, "Update", new { key = Model.Game.Key, controller = "Game" }, new { @class = "btn btn-link pull-right" })
		}
	}
}

<!-- basket confirmation modal -->
<div class="modal fade" id="basket-confirm">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<h4 class="modal-title">@Resource.BasketConfirmationDialog_Title</h4>
			</div>
			<div class="modal-body">
				<div class="col-md-9">
					@Html.DisplayTextFor(m => m.Game.DisplayName)
				</div>
				<div class="col-md-3">
					@Html.DisplayTextFor(m => m.Game.Price)
				</div>
				<br />
			</div>
			<div class="modal-footer">
				@using (Html.BeginForm("Buy", "Order", new { gameKey = Model.Game.Key }, FormMethod.Post))
				{
					@Html.AntiForgeryToken()
                    
					<button type="submit" class="btn btn-primary">@Resource.Common_Yes</button>
					<button type="button" class="btn btn-default" data-dismiss="modal">@Resource.Common_No</button>
				}
			</div>
		</div>
	</div>
</div>