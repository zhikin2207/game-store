//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameStore.BLL.Banking {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentStatus", Namespace="http://schemas.datacontract.org/2004/07/BankService.DTO.Components")]
    public enum PaymentStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotEnoughMoney = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardDoesNotExist = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaymentFailed = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Banking.IPaymentService")]
    public interface IPaymentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/IsCardExists", ReplyAction="http://tempuri.org/IPaymentService/IsCardExistsResponse")]
        bool IsCardExists(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/IsCardExists", ReplyAction="http://tempuri.org/IPaymentService/IsCardExistsResponse")]
        System.Threading.Tasks.Task<bool> IsCardExistsAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/PayWithVisa", ReplyAction="http://tempuri.org/IPaymentService/PayWithVisaResponse")]
        GameStore.BLL.Banking.PaymentStatus PayWithVisa(string cardNumber, string userName, string cvv2, int expirationMonth, int expiretionYear, string purpose, decimal summ, string email, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/PayWithVisa", ReplyAction="http://tempuri.org/IPaymentService/PayWithVisaResponse")]
        System.Threading.Tasks.Task<GameStore.BLL.Banking.PaymentStatus> PayWithVisaAsync(string cardNumber, string userName, string cvv2, int expirationMonth, int expiretionYear, string purpose, decimal summ, string email, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/PayWithMasterCard", ReplyAction="http://tempuri.org/IPaymentService/PayWithMasterCardResponse")]
        GameStore.BLL.Banking.PaymentStatus PayWithMasterCard(string cardNumber, string userName, string cvv2, int expirationMonth, int expiretionYear, string purpose, decimal summ, string email, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/PayWithMasterCard", ReplyAction="http://tempuri.org/IPaymentService/PayWithMasterCardResponse")]
        System.Threading.Tasks.Task<GameStore.BLL.Banking.PaymentStatus> PayWithMasterCardAsync(string cardNumber, string userName, string cvv2, int expirationMonth, int expiretionYear, string purpose, decimal summ, string email, string phone);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPaymentServiceChannel : GameStore.BLL.Banking.IPaymentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PaymentServiceClient : System.ServiceModel.ClientBase<GameStore.BLL.Banking.IPaymentService>, GameStore.BLL.Banking.IPaymentService {
        
        public PaymentServiceClient() {
        }
        
        public PaymentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PaymentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaymentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaymentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsCardExists(string cardNumber) {
            return base.Channel.IsCardExists(cardNumber);
        }
        
        public System.Threading.Tasks.Task<bool> IsCardExistsAsync(string cardNumber) {
            return base.Channel.IsCardExistsAsync(cardNumber);
        }
        
        public GameStore.BLL.Banking.PaymentStatus PayWithVisa(string cardNumber, string userName, string cvv2, int expirationMonth, int expiretionYear, string purpose, decimal summ, string email, string phone) {
            return base.Channel.PayWithVisa(cardNumber, userName, cvv2, expirationMonth, expiretionYear, purpose, summ, email, phone);
        }
        
        public System.Threading.Tasks.Task<GameStore.BLL.Banking.PaymentStatus> PayWithVisaAsync(string cardNumber, string userName, string cvv2, int expirationMonth, int expiretionYear, string purpose, decimal summ, string email, string phone) {
            return base.Channel.PayWithVisaAsync(cardNumber, userName, cvv2, expirationMonth, expiretionYear, purpose, summ, email, phone);
        }
        
        public GameStore.BLL.Banking.PaymentStatus PayWithMasterCard(string cardNumber, string userName, string cvv2, int expirationMonth, int expiretionYear, string purpose, decimal summ, string email, string phone) {
            return base.Channel.PayWithMasterCard(cardNumber, userName, cvv2, expirationMonth, expiretionYear, purpose, summ, email, phone);
        }
        
        public System.Threading.Tasks.Task<GameStore.BLL.Banking.PaymentStatus> PayWithMasterCardAsync(string cardNumber, string userName, string cvv2, int expirationMonth, int expiretionYear, string purpose, decimal summ, string email, string phone) {
            return base.Channel.PayWithMasterCardAsync(cardNumber, userName, cvv2, expirationMonth, expiretionYear, purpose, summ, email, phone);
        }
    }
}
